/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewCustomTileDialog.java
 *
 * Created on 2011-4-27, 18:08:48
 */

package org.mepper.resources.gui;

import java.awt.event.ActionEvent;

import javax.swing.Action;
import javax.swing.table.DefaultTableModel;

import org.mepper.resources.PropertySupported;
import org.zhiwu.app.AppDialog;
import org.zhiwu.app.AppManager;
import org.zhiwu.app.Application;
import org.zhiwu.app.action.AbsAction;
import org.zhiwu.utils.AppResources;

/**
 * <B>NewCustomTileDialog</B>
 * 
 * @author Zhi-Wu Chen. Email: <a href="mailto:Java.mepper@gmail.com">Java.mepper@gmail.com</a>
 * @version Ver 1.0.01 2011-4-27 created
 * @since org.mepper.resource.gui Ver 1.0
 * 
 */
public class PropertyDialog extends AppDialog {
	private final PropertySupported propertySupported;
        private final AppResources r = AppManager.getResources();
	
	private final Action addPropertyAction =new AbsAction("add") {
		@Override
		public void actionPerformed(ActionEvent e) {
			DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
			model.insertRow(jTable1.getRowCount(), new Object[]{"",""});
		}
	};
	
	private final Action deletePropertyAction = new AbsAction("delete") {
		@Override
		public void actionPerformed(ActionEvent e) {
			DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
			model.removeRow(jTable1.getSelectedRow());
		}
	};
	
	private final Action confirmAction =new AbsAction("confirm") {
		@Override
		public void actionPerformed(ActionEvent e) {
			confirm();
		}
	};
	
	public PropertyDialog(Application app, PropertySupported p) {
		super(app);
		this.propertySupported = p;
		initComponents();
		setTitle(p+" "+r.getString("properties"));

		initFiled();

	}

	protected void confirm() {
		messager.setText("");
		
		for(String n:propertySupported.propertyNames()){
			propertySupported.removeProperty(n);
		}
		
		int p = jTable1.convertColumnIndexToView(0);
		int q= jTable1.convertColumnIndexToView(1);
		for(int i=0,j=jTable1.getRowCount();i<j;i++){
			String pn =jTable1.getValueAt(i, p).toString();
			String pv= jTable1.getValueAt(i, q).toString();
			if(pn.startsWith("_")){
				messager.setText(r.getString("error.data.format") +pn);
			}
			if(pn.trim().equals("") || pv.trim().equals("")){
				messager.setText(r.getString("name")+" / "+r.getString("value")+" "+r.getString("must.be.entered"));
				return;
			}
			if(propertySupported.getProperty(pn)!= null){
				messager.setText(r.getString("already.exist"));
				return;
			}
			propertySupported.putProperty(pn, pv);
		}
		fireOptionSelected(COMFIRM_OPTION); 		
	}

	private void initFiled() {
		DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
		for(String name:propertySupported.propertyNames()){
			if(name.startsWith("_")){
				continue;
			}
			model.insertRow(0, new String[]{name,propertySupported.getProperty(name)});
		}
	
	}

	/** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        messager = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, r.getString("properties"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        jPanel2.setLayout(new java.awt.BorderLayout());

        jToolBar1.setFloatable(false);
        jToolBar1.setOrientation(1);
        jToolBar1.setRollover(true);

        jButton1.setAction(addPropertyAction);
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton1);

        jButton2.setAction(deletePropertyAction);
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton2);

        jPanel2.add(jToolBar1, java.awt.BorderLayout.LINE_END);

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                r.getString("name"), r.getString("value")
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            @Override
			public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jButton3.setAction(confirmAction);
        jButton3.setText(r.getString("confirm"));

        messager.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                    .addComponent(messager)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(messager))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel messager;
    // End of variables declaration//GEN-END:variables

}
